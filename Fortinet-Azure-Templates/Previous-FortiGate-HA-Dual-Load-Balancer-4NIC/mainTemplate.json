{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "location"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "FortiGateNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Name for FortiGate virtual appliances (A & B will be appended to the end of each respectively)."
      }
    },
    "FortiGateImageSKU": {
      "type": "string",
      "defaultValue": "fortinet_fg-vm_payg",
      "allowedValues": [
        "fortinet_fg-vm",
        "fortinet_fg-vm_payg"
      ],
      "metadata": {
        "description": "Identifies whether to to use PAYG (on demand licensing) or BYOL license model (where license is purchased separately)"
      }
    },
    "instanceType": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "metadata": {
        "description": "Virtual Machine size selection"
      }
    },
    "publicIPNewOrExistingOrNone": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing",
        "none"
      ],
      "metadata": {
        "description": "Identify if to use a public IP, and if so whether it's new"
      }
    },
    "publicIP2NewOrExistingOrNone": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing",
        "none"
      ],
      "metadata": {
        "description": "Whether to use a public IP and if so whether it is new"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of Public IP address element."
      }
    },
    "publicIPAddressResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource group to which the Public IP belongs."
      }
    },
    "publicIPAddress2Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of Public IP address element."
      }
    },
    "publicIPAddress2ResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource group to which the Public IP belongs."
      }
    },
    "publicIPAddressType": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Type of public IP address"
      }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identify whether to use a new or existing vnet"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure virtual network."
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource Group containing the virtual network - or new resource group from above (if new vnet)"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Virtual Network Address prefix"
      }
    },
    "Subnet1Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 1 Name"
      }
    },
    "Subnet1Prefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 1 Prefix"
      }
    },
    "subnet1LoadBalancerIP": {
      "type": "string",
      "metadata": {
        "description": "Static IP for public facing NIC of the FortiGate virtual appliance."
      }
    },
    "Subnet2Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 2 Name"
      }
    },
    "Subnet2Prefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 2 Prefix"
      }
    },
    "subnet2LoadBalancerIP": {
      "type": "string",
      "metadata": {
        "description": "Static IP for protected network facing NIC of the FortiGate virtual appliance."
      }
    },
    "Subnet3Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 3 Name"
      }
    },
    "Subnet3Prefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 3 Prefix"
      }
    },
    "subnet3LoadBalancerIP": {
      "type": "string",
      "metadata": {
        "description": "Static IP for protected network facing NIC of the FortiGate virtual appliance."
      }
    },
    "Subnet4Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 4 Name"
      }
    },
    "Subnet4Prefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 4 Prefix"
      }
    },
    "subnet4LoadBalancerIP": {
      "type": "string",
      "metadata": {
        "description": "Static IP for protected network facing NIC of the FortiGate virtual appliance."
      }
    },
    "FortinetTags": {
    "type": "object",
    "defaultValue": {
      "provider": "6EB3B02F-50E5-4A3E-8CB8-2E129258317D"
      }
    },
    "artifactsBaseUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/fortinetclouddev/FortiGate-HA-for-Azure/EastWestHA-4NIC",
      "metadata": {
        "description": "Base URL of the solution template gallery package",
        "artifactsBaseUrl": ""
      }
    }
  },
  "variables": {
    "compute_AvailabilitySet_FG_Name": "[concat(parameters('FortiGateNamePrefix'),'-AvailabilitySet')]",
    "compute_AvailabilitySet_FG_Id": "[resourceId('Microsoft.Compute/availabilitySets', variables('compute_AvailabilitySet_FG_Name'))]",

    "vmSize": "[parameters('instanceType')]",

    "VNetName": "[parameters('vnetName')]",
    "Subnet1Name": "[parameters('Subnet1Name')]",
    "Subnet2Name": "[parameters('Subnet2Name')]",
    "Subnet3Name": "[parameters('Subnet3Name')]",
    "Subnet4Name": "[parameters('Subnet4Name')]",

    "vnetID": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', variables('Subnet1Name'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/', variables('Subnet2Name'))]",
    "subnet3Ref": "[concat(variables('vnetID'),'/subnets/', variables('Subnet3Name'))]",
    "subnet4Ref": "[concat(variables('vnetID'),'/subnets/', variables('Subnet4Name'))]",

    "VNetAddressPrefix": "[parameters('vnetAddressPrefix')]",
    "Subnet1Prefix": "[parameters('Subnet1Prefix')]",
    "Subnet2Prefix": "[parameters('Subnet2Prefix')]",
    "Subnet3Prefix": "[parameters('Subnet3Prefix')]",
    "Subnet4Prefix": "[parameters('Subnet4Prefix')]",

    "vmName": "[concat(parameters('FortiGateNamePrefix'),'-A')]",
    "vm2Name": "[concat(parameters('FortiGateNamePrefix'),'-B')]",

    "routeTable1Name": "[concat(variables('Subnet1Name'),'-',parameters('FortiGateNamePrefix'),'RouteTable')]",
    "routeTable2Name": "[concat(variables('Subnet2Name'),'-',parameters('FortiGateNamePrefix'),'RouteTable')]",
    "routeTable3Name": "[concat(variables('Subnet3Name'),'-',parameters('FortiGateNamePrefix'),'RouteTable')]",
    "routeTable4Name": "[concat(variables('Subnet4Name'),'-',parameters('FortiGateNamePrefix'),'RouteTable')]",
    

    "subnet1KnownIP": "[parameters('subnet1LoadBalancerIP')]",
    "subnet2KnownIP": "[parameters('subnet2LoadBalancerIP')]",
    "subnet3KnownIP": "[parameters('subnet3LoadBalancerIP')]",
    "subnet4KnownIP": "[parameters('subnet4LoadBalancerIP')]",


    "internalLBName": "[concat(parameters('FortiGateNamePrefix'),'-InternalLoadBalancer')]",
    "internalLBFE1Name": "[concat(parameters('FortiGateNamePrefix'),'-ILB-',variables('Subnet1Name'),'-FrontEnd')]",
    "internalLBFE2Name": "[concat(parameters('FortiGateNamePrefix'),'-ILB-',variables('Subnet2Name'),'-FrontEnd')]",
    "internalLBFE3Name": "[concat(parameters('FortiGateNamePrefix'),'-ILB-',variables('Subnet3Name'),'-FrontEnd')]",
    "internalLBFE4Name": "[concat(parameters('FortiGateNamePrefix'),'-ILB-',variables('Subnet4Name'),'-FrontEnd')]",

    "internalLBBE1Name": "[concat(parameters('FortiGateNamePrefix'),'-ILB-',variables('Subnet1Name'),'-BackEnd')]",
    "internalLBBE2Name": "[concat(parameters('FortiGateNamePrefix'),'-ILB-',variables('Subnet2Name'),'-BackEnd')]",
    "internalLBBE3Name": "[concat(parameters('FortiGateNamePrefix'),'-ILB-',variables('Subnet3Name'),'-BackEnd')]",
    "internalLBBE4Name": "[concat(parameters('FortiGateNamePrefix'),'-ILB-',variables('Subnet4Name'),'-BackEnd')]",
    
    "internalLBid": "[resourceID('Microsoft.Network/loadBalancers',variables('internalLBName'))]",
    "internalLB_BE1Id": "[concat(variables('internalLBid'),'/backendAddressPools/',variables('internalLBBE1Name'))]",
    "internalLB_BE2Id": "[concat(variables('internalLBid'),'/backendAddressPools/',variables('internalLBBE2Name'))]",
    "internalLB_BE3Id": "[concat(variables('internalLBid'),'/backendAddressPools/',variables('internalLBBE3Name'))]",
    "internalLB_BE4Id": "[concat(variables('internalLBid'),'/backendAddressPools/',variables('internalLBBE4Name'))]",

    "apiVer": "2015-06-15",
    "compute_VM_fg1_Name": "[variables('vmName')]",
    "compute_VM_fg2_Name": "[variables('vm2Name')]",

    "network_NIC_fg11_Name": "[concat(variables('vmName'),'Nic0')]",
    "network_NIC_fg11_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg11_Name'))]",
    "network_NIC_fg12_Name": "[concat(variables('vmName'),'Nic1')]",
    "network_NIC_fg12_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg12_Name'))]",
    "network_NIC_fg13_Name": "[concat(variables('vmName'),'Nic2')]",
    "network_NIC_fg13_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg13_Name'))]",
    "network_NIC_fg14_Name": "[concat(variables('vmName'),'Nic3')]",
    "network_NIC_fg14_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg14_Name'))]",
    
    "network_NIC_fg21_Name": "[concat(variables('vm2Name'),'Nic0')]",
    "network_NIC_fg21_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg21_Name'))]",
    "network_NIC_fg22_Name": "[concat(variables('vm2Name'),'Nic1')]",
    "network_NIC_fg22_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg22_Name'))]",
    "network_NIC_fg23_Name": "[concat(variables('vm2Name'),'Nic2')]",
    "network_NIC_fg23_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg23_Name'))]",
    "network_NIC_fg24_Name": "[concat(variables('vm2Name'),'Nic3')]",
    "network_NIC_fg24_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg24_Name'))]",

    "publicIPSetupURL": "[concat(parameters('artifactsBaseUrl'),'/','publicip-',parameters('publicIPNewOrExistingOrNone'),'-',parameters('publicIP2NewOrExistingOrNone'),'.json')]",
    "virtualNetworkSetupURL": "[concat(parameters('artifactsBaseUrl'),'/','vnet-',parameters('vnetNewOrExisting'),'.json')]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('compute_AvailabilitySet_FG_Name')]",
      "apiVersion": "2017-03-30",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "2"
      },
      "sku": {
        "name":  "Aligned"
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTable1Name')]",
      "apiVersion": "[variables('apiVer')]",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "location": "[parameters('location')]",
      "properties": {
        "routes": [
          {
            "name": "[concat('to',variables('Subnet2Name'))]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('subnet1KnownIP')]"
            }
          },
           {
            "name": "[concat('to',variables('Subnet3Name'))]",
            "properties": {
              "addressPrefix": "[variables('subnet3Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('subnet1KnownIP')]"
            }
          },
           {
            "name": "[concat('to',variables('Subnet4Name'))]",
            "properties": {
              "addressPrefix": "[variables('subnet4Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('subnet1KnownIP')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTable2Name')]",
      "apiVersion": "[variables('apiVer')]",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "location": "[parameters('location')]",
      "properties": {
        "routes": [
          {
            "name": "[concat('to',variables('Subnet1Name'))]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('subnet2KnownIP')]"
            }
          },
          {
            "name": "[concat('to',variables('Subnet3Name'))]",
            "properties": {
              "addressPrefix": "[variables('subnet3Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('subnet2KnownIP')]"
            }
          },
          {
            "name": "[concat('to',variables('Subnet4Name'))]",
            "properties": {
              "addressPrefix": "[variables('subnet4Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('subnet2KnownIP')]"
            }
          },
          {
            "name": "toDefault",
            "properties": {
              "AddressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIPAddress": "[variables('subnet2KnownIP')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTable3Name')]",
      "apiVersion": "[variables('apiVer')]",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "location": "[parameters('location')]",
      "properties": {
        "routes": [
          {
            "name": "[concat('to',variables('Subnet1Name'))]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('subnet3KnownIP')]"
            }
          },
          {
            "name": "[concat('to',variables('Subnet2Name'))]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('subnet3KnownIP')]"
            }
          },
          {
            "name": "[concat('to',variables('Subnet4Name'))]",
            "properties": {
              "addressPrefix": "[variables('subnet4Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('subnet3KnownIP')]"
            }
          },
          {
            "name": "toDefault",
            "properties": {
              "AddressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIPAddress": "[variables('subnet3KnownIP')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTable4Name')]",
      "apiVersion": "[variables('apiVer')]",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "location": "[parameters('location')]",
      "properties": {
        "routes": [
          {
            "name": "[concat('to',variables('Subnet1Name'))]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('subnet4KnownIP')]"
            }
          },
          {
            "name": "[concat('to',variables('Subnet2Name'))]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('subnet4KnownIP')]"
            }
          },
          {
            "name": "[concat('to',variables('Subnet3Name'))]",
            "properties": {
              "addressPrefix": "[variables('subnet3Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('subnet4KnownIP')]"
            }
          },
          {
            "name": "toDefault",
            "properties": {
              "AddressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIPAddress": "[variables('subnet4KnownIP')]"
            }
          }
        ]
      }
    },
    {
      "name": "SettingUpVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Network/routeTables/', variables('routeTable1Name'))]",
        "[concat('Microsoft.Network/routeTables/', variables('routeTable2Name'))]",
        "[concat('Microsoft.Network/routeTables/', variables('routeTable3Name'))]",
        "[concat('Microsoft.Network/routeTables/', variables('routeTable4Name'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('virtualNetworkSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "subnet1Name": {
            "value": "[parameters('Subnet1Name')]"
          },
          "subnet1AddressPrefix": {
            "value": "[parameters('Subnet1Prefix')]"
          },
          "subnet2Name": {
            "value": "[parameters('Subnet2Name')]"
          },
          "subnet2AddressPrefix": {
            "value": "[parameters('Subnet2Prefix')]"
          },
          "subnet3Name": {
            "value": "[parameters('Subnet3Name')]"
          },
          "subnet3AddressPrefix": {
            "value": "[parameters('Subnet3Prefix')]"
          },
          "subnet4Name": {
            "value": "[parameters('Subnet4Name')]"
          },
          "subnet4AddressPrefix": {
            "value": "[parameters('Subnet4Prefix')]"
          },
          "vnetResourceGroup": {
            "value": "[parameters('vnetResourceGroup')]"
          },
          "routeTable1Name": {
            "value": "[variables('routeTable1Name')]"
          },
          "routeTable2Name": {
            "value": "[variables('routeTable2Name')]"
          },
          "routeTable3Name": {
            "value": "[variables('routeTable3Name')]"
          },
          "routeTable4Name": {
            "value": "[variables('routeTable4Name')]"
          },
          "FortinetTags": {
            "value": "[parameters('FortinetTags')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('internalLBName')]",
      "apiVersion": "[variables('apiVer')]",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/routeTables/', variables('routeTable1Name'))]",
        "[concat('Microsoft.Network/routeTables/', variables('routeTable2Name'))]",
        "[concat('Microsoft.Network/routeTables/', variables('routeTable3Name'))]",
        "[concat('Microsoft.Network/routeTables/', variables('routeTable4Name'))]",
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('internalLBFE1Name')]",
            "properties": {
              "privateIPAddress": "[variables('subnet1KnownIP')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          },
          {
            "name": "[variables('internalLBFE2Name')]",
            "properties": {
              "privateIPAddress": "[variables('subnet2KnownIP')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              }
            }
          },
          {
            "name": "[variables('internalLBFE3Name')]",
            "properties": {
              "privateIPAddress": "[variables('subnet3KnownIP')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('subnet3Ref')]"
              }
            }
          },
          {
            "name": "[variables('internalLBFE4Name')]",
            "properties": {
              "privateIPAddress": "[variables('subnet4KnownIP')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('subnet4Ref')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('internalLBBE1Name')]"
          },
          {
            "name": "[variables('internalLBBE2Name')]"
          },
                    {
            "name": "[variables('internalLBBE3Name')]"
          },
          {
            "name": "[variables('internalLBBE4Name')]"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFE1Name'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/backendAddressPools/', variables('internalLBBE1Name'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbruleFE1tcp80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFE1Name'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/backendAddressPools/', variables('internalLBBE1Name'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbruleFE1tcp443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFE1Name'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/backendAddressPools/', variables('internalLBBE1Name'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 22,
              "backendPort": 22,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbruleFE1tcp22"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFE2Name'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/backendAddressPools/', variables('internalLBBE2Name'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbruleFE2tcp80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFE2Name'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/backendAddressPools/', variables('internalLBBE2Name'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbruleFE2tcp443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFE2Name'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/backendAddressPools/', variables('internalLBBE2Name'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 22,
              "backendPort": 22,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbruleFE2tcp22"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFE3Name'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/backendAddressPools/', variables('internalLBBE3Name'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbruleFE3tcp80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFE3Name'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/backendAddressPools/', variables('internalLBBE3Name'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbruleFE3tcp443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFE3Name'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/backendAddressPools/', variables('internalLBBE3Name'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 22,
              "backendPort": 22,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbruleFE3tcp22"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFE4Name'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/backendAddressPools/', variables('internalLBBE4Name'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbruleFE4tcp80"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFE4Name'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/backendAddressPools/', variables('internalLBBE4Name'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbruleFE4tcp443"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFE4Name'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/backendAddressPools/', variables('internalLBBE4Name'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 22,
              "backendPort": 22,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbruleFE4tcp22"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 22,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "SettingUpPublicIPandFollowing",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('internalLBName'))]",
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('publicIPSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmNamePrefix": {
            "value": "[parameters('FortiGateNamePrefix')]"
          },
          "publicIPAddressName": {
            "value": "[parameters('publicIPAddressName')]"
          },
          "publicIPAddress2Name": {
            "value": "[parameters('publicIPAddress2Name')]"
          },
          "publicIPAddressType": {
            "value": "[parameters('publicIPAddressType')]"
          },
          "publicIPAddressResourceGroup": {
            "value": "[parameters('publicIPAddressResourceGroup')]"
          },
          "publicIPAddress2ResourceGroup": {
            "value": "[parameters('publicIPAddressResourceGroup')]"
          },
          "VMName": {
            "value": "[variables('vmName')]"
          },
          "VM2Name": {
            "value": "[variables('vm2Name')]"
          },
          "subnet1Ref": {
            "value": "[variables('subnet1Ref')]"
          },
          "network_NIC_fg11_Name": {
            "value": "[variables('network_NIC_fg11_Name')]"
          },
          "network_NIC_fg21_Name": {
            "value": "[variables('network_NIC_fg21_Name')]"
          },
          "internalLB_BE1Id": {
            "value": "[variables('internalLB_BE1Id')]"
          },
          "FortinetTags": {
            "value": "[parameters('FortinetTags')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg12_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('internalLBName'))]",
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('internalLB_BE2Id')]"
                }
              ]
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg22_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('internalLBName'))]",
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('internalLB_BE2Id')]"
                }
              ]
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg13_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('internalLBName'))]",
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet3Ref')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('internalLB_BE3Id')]"
                }
              ]
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg23_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('internalLBName'))]",
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet3Ref')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('internalLB_BE3Id')]"
                }
              ]
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg14_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('internalLBName'))]",
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet4Ref')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('internalLB_BE4Id')]"
                }
              ]
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg24_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('internalLBName'))]",
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet4Ref')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('internalLB_BE4Id')]"
                }
              ]
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('compute_VM_fg1_Name')]",
      "apiVersion": "2017-03-30",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "location": "[parameters('location')]",
      "plan": {
        "name": "[parameters('FortiGateImageSKU')]",
        "publisher": "fortinet",
        "product": "fortinet_fortigate-vm_v5"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpPublicIPandFollowing')]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg12_Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg13_Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg14_Name'))]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('compute_AvailabilitySet_FG_Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "availabilitySet": {
          "id": "[variables('compute_AvailabilitySet_FG_Id')]"
        },
        "osProfile": {
          "computerName": "[variables('compute_VM_fg1_Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "fortinet",
            "offer": "fortinet_fortigate-vm_v5",
            "sku": "[parameters('FortiGateImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": "30",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[variables('network_NIC_fg11_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg12_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg13_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg14_Id')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('compute_VM_fg2_Name')]",
      "apiVersion": "2017-03-30",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "location": "[parameters('location')]",
      "plan": {
        "name": "[parameters('FortiGateImageSKU')]",
        "publisher": "fortinet",
        "product": "fortinet_fortigate-vm_v5"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpPublicIPandFollowing')]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg22_Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg23_Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg24_Name'))]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('compute_AvailabilitySet_FG_Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "availabilitySet": {
          "id": "[variables('compute_AvailabilitySet_FG_Id')]"
        },
        "osProfile": {
          "computerName": "[variables('compute_VM_fg2_Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "fortinet",
            "offer": "fortinet_fortigate-vm_v5",
            "sku": "[parameters('FortiGateImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": "30",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[variables('network_NIC_fg21_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg22_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg23_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg24_Id')]"
            }
          ]
        }
      }
    }
  ]
  }
